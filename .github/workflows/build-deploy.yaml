name: Build and Deploy code

on: [push, pull_request] 
  # push:
  #   paths: 
  #   - 'url-shortener-react/**'
  # pull_request:
  #   paths: 
  #   - 'url-shortener-react/**'

jobs:
  build:
    defaults:
      run:
        working-directory: ./url-shortener-react
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    outputs:
      sha_short: ${{ steps.sha_short.outputs.sha_short }}
    steps:
      - name: Pulling git repo
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Get git SHA short
        id: sha_short
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Print git SHA short
        id: print_short
        run: echo ${{ steps.sha_short.outputs.sha_short }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Print Working Directory
        run: pwd
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: ./url-shortener-react
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/url-shortener-fe:sha-${{ steps.sha_short.outputs.sha_short }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   environment:
  #     name: production
  #   env:
  #     sha_short: ${{ needs.build.outputs.sha_short}}
  #   steps:
  #     - name: pulling git repo
  #       uses: actions/checkout@v2
  #     - name: Generate deploy manifest from Jinja template
  #       uses: cuchi/jinja2-action@v1.1.0
  #       with: 
  #         template: tmpl/deploy.j2
  #         output_file: ./deploy.yaml
  #         strict: true
  #         variables: |
  #           image_deploy_tag=sha-${{ env.sha_short }}
            
  #     - name: Configure git for the action
  #       run: |
  #         git config --local user.email "action@github.com"
  #         git config --local user.name "GitHub Action"
          
  #     - name: Stash unstaged changes
  #       run: git stash --include-untracked
        
  #     - name: Pull latest changes from the remote branch
  #       run: git pull origin main --rebase
        
  #     - name: Apply stashed changes
  #       run: git stash pop || echo "No stashed changes to apply"

  #     - name: Commit deploy manifest on local repo
  #       run: |
  #         git add ./deploy.yaml
  #         git commit -s -m "[skip ci] Generate deployment manifests"
          
  #     - name: Push deploy manifests to remote repo
  #       uses: ad-m/github-push-action@v0.6.0
  #       with: 
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         branch: main
