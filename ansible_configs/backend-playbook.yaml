---
- hosts: backend
  become: yes
  # connection: local
  tasks:
    - name: Clone a github repository
      git:
        repo: https://github.com/Sp3aR007/Three-Tier-Project.git
        dest: /home/rahul/repos/
        clone: yes
        update: yes
    - name: Update apt cache
      apt:
        update_cache: yes
    - name: Install docker packages
      remote_user: rahul
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      with_items:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
      tags:
        - docker

    - name: Add Docker's official GPG key
      remote_user: rahul
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      tags:
        - docker

    - name: Verify that we have the key with the fingerprint
      remote_user: rahul
      apt_key:
        id: 0EBFCD88
        state: present
      tags:
        - docker
    - name: Set up the stable repository
      remote_user: rahul
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
        state: present
        update_cache: yes
      tags:
        - docker

    - name: Update apt packages
      remote_user: rahul
      apt:
        update_cache: yes
      tags:
        - docker

    - name: Install docker
      remote_user: rahul
      apt:
        name: docker-ce
        state: present
        update_cache: yes
      tags:
        - docker

    - name: Add remote "rahul" user to "docker" group
      remote_user: rahul
      user:
        name: "rahul"
        group: "docker"
        append: yes
      tags:
        - docker

    - name: Install docker-compose
      remote_user: rahul
      get_url:
        url : https://github.com/docker/compose/releases/download/1.25.1-rc1/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: 'u+x,g+x'
    - name: Build Docker image
      remote_user: rahul
      community.docker.docker_image:
        name: sp3ar007/url-shortener-sb:ansible
        build:
          path: /home/rahul/repos/url-shortener-sb/
        source: build
    - name: Run Docker container with environment variables
      remote_user: rahul
      community.docker.docker_container:
        name: backend
        image: sp3ar007/url-shortener-be:ansible
        ports:
          - "8080:8080"
        env:
          DATABASE_URL=jdbc:postgresql://postgres:5432/urlshortenerdb
          DATABASE_USERNAME=postgres
          DATABASE_PASSWORD=postgres
          DATABASE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
          FRONTEND_URL=http://localhost
        state: started
